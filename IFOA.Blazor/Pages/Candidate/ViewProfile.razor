@attribute [Route(ViewProfile.PageUrl + "/{Id:guid?}")]
@using IFOA.Blazor.Components.CareerTimeLine
@using IFOA.Shared.Dtos
@using IFOA.Shared.Enums
@inherits IFOA.Blazor.Common.DbPage


<MudFab Style="position:fixed; bottom:15px; right:15px; z-index: 100" Color=@Color.Secondary Icon=@Icons.Material.Filled.Edit/>

<MudGrid>
    <!-- Drawer -->
    <MudItem lg="4" xs="12">

        <MudCard Style="height: 330px">
            @if(string.IsNullOrEmpty(Candidate.ImageLink) == false)
            {
                <MudCardMedia Image="@Candidate.ImageLink" Height="200" Style="background-position: center; background-size: contain;" />
            }
            else
            {
                <MudCardMedia Image="images/noImage.png" Height="200" Style="background-position: center; background-size: contain;"/>
            }
            <MudCardContent>
                <MudText Typo="Typo.h5">@($"{Candidate.Name} {Candidate.Surname}")</MudText>
                <MudText Typo="Typo.body2">ToDo</MudText>
                <MudText Typo="Typo.body2">@Candidate.Biography</MudText>
                <MudRating ReadOnly="true" SelectedValue="@Candidate.Ranking"/>
            </MudCardContent>
        </MudCard>
    </MudItem>

    <!-- Main Content -->
    <MudItem lg="4" xs="12">
        <MudCard Style="height: 330px">
            <MudCardHeader>
                <MudText Typo="Typo.h6">Personal Info</MudText>
            </MudCardHeader>
            <MudCardContent>

                <MudItem xs="12" md="8">
                    <MudField Label="Day of Birth" Variant="Variant.Text">@(Candidate.BirthDate.Value.ToString("dd-MMM-yyyy"))</MudField>
                </MudItem>

                <MudItem xs="12" md="8">
                    <MudField Label="Age" Variant="Variant.Text">@((DateTime.Now.Year - Candidate.BirthDate.Value.Year)) y.o.</MudField>
                </MudItem>

                <MudItem xs="12" md="8">
                    <MudField Label="Phone Number"
                              Variant="Variant.Text"
                              Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Phone" AdornmentColor="Color.Primary"
                              OnAdornmentClick="() => CallTo()">
                        @Candidate.PhoneNumber
                    </MudField>
                </MudItem>

                <MudItem xs="12" md="8">
                    <MudField Label="Email" Variant="Variant.Text"
                              Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Email" AdornmentColor="Color.Primary"
                              OnAdornmentClick="() => MailTo()">
                        @Candidate.Email
                    </MudField>
                </MudItem>

            </MudCardContent>
        </MudCard>
    </MudItem>

    <MudItem lg="4" xs="12">
        <MudCard Style="height: 330px">
            <MudCardHeader>
                <MudText Typo="Typo.h6">Residency Info</MudText>
            </MudCardHeader>
            <MudCardContent>
                <MudItem xs="12" md="8">
                    <MudField Label="Country of Residence" Variant="Variant.Text">@(Candidate.ResidenceCountry.ToString())</MudField>
                </MudItem>

                <MudItem xs="12" md="8">
                    <MudField Label="Nationality" Variant="Variant.Text">@(Candidate.Nationality.ToString())</MudField>
                </MudItem>

                <MudItem xs="12" md="8">
                    <MudField Label="Address" Variant="Variant.Text">@Candidate.Address</MudField>
                </MudItem>

                <MudItem xs="12" md="8">
                    <MudField Label="City" Variant="Variant.Text">@($"{Candidate.ZipCode} {Candidate.City}")</MudField>
                </MudItem>
                
            </MudCardContent>
        </MudCard>
    </MudItem>

    <!-- Carrer Timeline -->
    <IFOACareerTimeLine CareerTimeLineData="@_careerTimeLineDatas"/>s


</MudGrid>

@code {

        public const string PageUrl = "/candidate-profile";

    private void MailTo()
    {
        Navigation.NavigateTo($"mailto:russosalv@gmail.com");
    }

    private void CallTo()
    {
        Navigation.NavigateTo($"callTo:+393484224991");
    }

    private List<CareerTimeLineData> _careerTimeLineDatas = new List<CareerTimeLineData>()
    {
        new CareerTimeLineData()
        {
            Type = TimeLineTypeElementEnum.Certifications,
            FromDate = new DateTimeOffset(2001, 01, 1, 0, 0, 0, TimeSpan.Zero),
            ToDate = new DateTimeOffset(2006, 7, 1, 0, 0, 0, TimeSpan.Zero),
            Title = "High School",
            SubTitle = "ITN Nino Bixio",
        },
        new CareerTimeLineData()
        {
            Type = TimeLineTypeElementEnum.Experiences,
            FromDate = new DateTimeOffset(2006, 08, 1, 0, 0, 0, TimeSpan.Zero),
            ToDate = new DateTimeOffset(2010, 08, 1, 0, 0, 0, TimeSpan.Zero),
            Title = "Grimaldi Group",
            SubTitle = "Officer",
        },
        new CareerTimeLineData()
        {
            Type = TimeLineTypeElementEnum.Projects,
            FromDate = new DateTimeOffset(2006, 08, 1, 0, 0, 0, TimeSpan.Zero),
            ToDate = new DateTimeOffset(2007, 08, 1, 0, 0, 0, TimeSpan.Zero),
            Title = "Deck Cadet",
            SubTitle = "MV Repubblica Argentina",
        },
        new CareerTimeLineData()
        {
            Type = TimeLineTypeElementEnum.Projects,
            FromDate = new DateTimeOffset(2007, 10, 1, 0, 0, 0, TimeSpan.Zero),
            ToDate = new DateTimeOffset(2008, 04, 1, 0, 0, 0, TimeSpan.Zero),
            Title = "3rd Officer",
            SubTitle = "MV Grande Benelux",
        },
        new CareerTimeLineData()
        {
            Type = TimeLineTypeElementEnum.Projects,
            FromDate = new DateTimeOffset(2008, 6, 1, 0, 0, 0, TimeSpan.Zero),
            ToDate = new DateTimeOffset(2008, 10, 1, 0, 0, 0, TimeSpan.Zero),
            Title = "2nd Officer - 3rd Engineer",
            SubTitle = "MV Repubblica di Genova",
        },
        new CareerTimeLineData()
        {
            Type = TimeLineTypeElementEnum.Projects,
            FromDate = new DateTimeOffset(2008, 10, 1, 0, 0, 0, TimeSpan.Zero),
            ToDate = new DateTimeOffset(2009, 06, 1, 0, 0, 0, TimeSpan.Zero),
            Title = "2nd Officer - 3rd Engineer",
            SubTitle = "Mv EuroShattle Valencia",
        },
        new CareerTimeLineData()
        {
            Type = TimeLineTypeElementEnum.Certifications,
            FromDate = new DateTimeOffset(2010, 9, 1, 0, 0, 0, TimeSpan.Zero),
            ToDate = new DateTimeOffset(2015, 01, 1, 0, 0, 0, TimeSpan.Zero),
            Title = "Hardware and Software Engineering",
            SubTitle = "University of Naples Parthenope",
        },
        new CareerTimeLineData()
        {
            Type = TimeLineTypeElementEnum.Experiences,
            FromDate = new DateTimeOffset(2015, 2, 1, 0, 0, 0, TimeSpan.Zero),
            ToDate = new DateTimeOffset(2015, 12, 1, 0, 0, 0, TimeSpan.Zero),
            Title = "Solari di Udine",
            SubTitle = "Software Developer",
        },
        new CareerTimeLineData()
        {
            Type = TimeLineTypeElementEnum.Experiences,
            FromDate = new DateTimeOffset(2016, 2, 1, 0, 0, 0, TimeSpan.Zero),
            ToDate = new DateTimeOffset(2019, 12, 1, 0, 0, 0, TimeSpan.Zero),
            Title = "SpecTec",
            SubTitle = "Software Architect",
        },
        new CareerTimeLineData()
        {
            Type = TimeLineTypeElementEnum.Experiences,
            FromDate = new DateTimeOffset(2019, 12, 1, 0, 0, 0, TimeSpan.Zero),
            ToDate = new DateTimeOffset(2022, 08, 1, 0, 0, 0, TimeSpan.Zero),
            Title = "Capgemini",
            SubTitle = "Azure Architect",
        },
        new CareerTimeLineData()
        {
            Type = TimeLineTypeElementEnum.Experiences,
            FromDate = new DateTimeOffset(2022, 08, 1, 0, 0, 0, TimeSpan.Zero),
            ToDate = new DateTimeOffset(9999, 08, 1, 0, 0, 0, TimeSpan.Zero),
            Title = "Blastness",
            SubTitle = "Azure Architect",
        },
    };

}