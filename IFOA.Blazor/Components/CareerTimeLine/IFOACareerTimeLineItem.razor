@using IFOA.Shared.Dtos
@namespace IFOA.Blazor.Components.CareerTimeLine

<MudTimelineItem Color="@Color" Size="Size.Small">
    <ItemOpposite>
        <MudText Color="@Color" Typo="Typo.h5">@GetDate()</MudText>
    </ItemOpposite>
    <ItemContent>
        <MudCard Outlined="true" Elevation="25">
            <MudCardHeader>
                <CardHeaderAvatar>
                    <MudAvatar Color="@Color">
                        <MudIcon Icon="@Icon"/>
                    </MudAvatar>
                </CardHeaderAvatar>
                <CardHeaderContent>
                    <MudText Typo="Typo.body1">@Data.Title</MudText>
                    <MudText Typo="Typo.body2">@Data.SubTitle</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>@GetDelimitedText()</MudText>
                <MudLink Color="@DetailLinkColor" Href="@Data.Link">View Detail</MudLink>
            </MudCardContent>
        </MudCard>
    </ItemContent>
</MudTimelineItem>

@code
{
    [Parameter] public Color Color { get; set; } = Color.Primary;
    [Parameter] public string Icon { get; set; } = Icons.Material.Filled.AirplanemodeActive;
    
    [Parameter]
    public CareerTimeLineData Data { get; set; } = new CareerTimeLineData(); 
    
    [Parameter] public Color DetailLinkColor { get; set; } = Color.Primary;
    private string GetDelimitedText()
    {
        if(string.IsNullOrEmpty(Data.Description))
        {
            return string.Empty;
        }
        
        if (Data.Description.Length > 150)
        {
            return Data.Description.Substring(0, 150) + " ...";
        }
        else
        {
            return Data.Description;
        }
    }

    private string GetDate()
    {
        var returner = string.Empty;
        
        if(Data?.FromDate != null)
        {
            returner += Data.FromDate.ToString("MMM yyyy");
        }

        if (Data?.ToDate != null && Data.ToDate.Year != 9999)
        {
            returner += " - " + Data.ToDate.ToString("MMM yyyy");
        }
        else
        {
            returner += " - Present";
        }

        return returner;
    }
    
}
